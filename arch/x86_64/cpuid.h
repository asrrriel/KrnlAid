#ifndef __CPUID_H__
#define __CPUID_H__

enum leaves {
   CPUID_LEAF_BASIC = 0x00000000,
   CPUID_LEAF_CPU_ID = 0x00000001,
   CPUID_LEAF_CACHE_TLB = 0x00000002,
   CPUID_LEAF_SERIAL_NUMBER = 0x00000003,
   CPUID_LEAF_CACHE_PARAMS = 0x00000004,
   CPUID_LEAF_MONITOR_MWAIT = 0x00000005,
   CPUID_LEAF_THERMAL_AND_POWER = 0x00000006,
   CPUID_LEAF_EXTENDED_FEATURES = 0x00000007,
   CPUID_LEAF_CACHE_ACCESS_INFO = 0x00000009,
   CPUID_LEAF_PERFORMANCE_MONITORING = 0x0000000A,
   CPUID_LEAF_EXTENDENDED_TOPOLOGY = 0x0000000B,
   CPUID_LEAF_EXTENDENDED_TOPOLOGY2 = 0x0000000D,
   CPUID_LEAF_INTEL_RDT = 0x0000000F,
   CPUID_LEAF_INTEL_RDT2 = 0x00000010,
   CPUID_LEAF_INTEL_SGX = 0x00000012,
   CPUID_LEAF_CPU_TRACE_ENUM = 0x00000014,
   CPUID_LEAF_TSC = 0x00000015,
   CPUID_LEAF_CPU_FREQ_INFO = 0x00000016,
   CPUID_LEAF_SOC_VENDOR = 0x00000017,
   CPUID_LEAF_DETERMINISTIC_ADRESS_TRANSLATION_PARAMS = 0x00000018,
   CPUID_LEAF_KEY_LOCKER = 0x000000019,
   CPUID_LEAF_NATIVE_MODEL_ID = 0x0000001A,
   CPUID_LEAF_PCONFIG_INFO = 0x0000001B,
   CPUID_LEAF_LAST_BRACH = 0x00000001C,
   CPUID_LEAF_TILE_INFO = 0x00000001D,
   CPUID_LEAF_TMUL_INFO = 0x00000001E,
   CPUID_LEAF_V2_EXTENDED_TOPOLOGY = 0x00000001F,
   CPUID_LEAF_V2_EXTENDED_TOPOLOGY2 = 0x000000020,
   CPUID_LEAF_MS_HYPERV_IDENT = 0x40000000,
   CPUID_LEAF_MS_HYPERV_INTERFCE_IDENT = 0x40000001,
   CPUID_LEAF_MS_HYPERV_SYSTEM_IDENT = 0x40000002,
   CPUID_LEAF_MS_HYPERV_FEATURE_IDENT = 0x40000003,
   CPUID_LEAF_MS_HYPERV_RECOMMENDATIONS = 0x40000004,
   CPUID_LEAF_MS_HYPERV_IMPL_LIMITS = 0x40000005,
   CPUID_LEAF_MS_HYPERV_HARDWARE_FEATURES = 0x40000006,
   CPUID_LEAF_MS_HYPERV_NESTED_FEATURES = 0x40000009,
   CPUID_LEAF_MS_HYPERV_NESTED_OPTIMISATIONS = 0x4000000A,
   CPUID_LEAF_EXTENDED_SIGNATURE = 0x800000001,
   CPUID_LEAF_BRAND_STRING1 = 0x800000002,
   CPUID_LEAF_BRAND_STRING2 = 0x800000003,
   CPUID_LEAF_BRAND_STRING3 = 0x800000004,
   CPUID_LEAF_MORE_CACHE = 0x800000006,
   CPUID_LEAF_INVARIANT_TSC_AVAILABLE = 0x800000007,
   CPUID_LEAF_PHYS_ADDR_SIZE = 0x800000008,
};

static inline void cpuid(int leaf, int subleaf, int* a, int* b, int* c, int* d) {
    __asm__ __volatile__ (
        "cpuid"
        : "=a" (*a), "=b" (*b), "=c" (*c), "=d" (*d)
        : "a" (leaf), "c" (subleaf)
    );
}

#endif // __CPUID_H__